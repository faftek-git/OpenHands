# Workflow that runs frontend unit tests
name: Run Frontend Unit Tests

# * Always run on "main"
# * Run on PRs that have changes in the "frontend" folder or this workflow
on:
  push:
    branches:
      - main
  pull_request:
    paths:
      - 'frontend/**'
      -  '.github/workflows/fe-unit-tests.yml'

# If triggered by a PR, it will be in the same group. However, each commit on main will be in its own unique group
concurrency:
  group: ${{ github.workflow }}-${{ (github.head_ref && github.ref) || github.run_id }}
  cancel-in-progress: true

jobs:
  # Run frontend linting first
  lint-frontend:
    name: Lint Frontend
    runs-on: blacksmith-4vcpu-ubuntu-2204
    steps:
      - uses: actions/checkout@v4
      - name: Install Node.js 20
        uses: useblacksmith/setup-node@v5
        with:
          node-version: 20
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        run: |
          cd frontend
          npm install --frozen-lockfile
      - name: Lint, TypeScript compilation, and translation checks
        run: |
          cd frontend
          npm run lint
          npm run make-i18n && tsc
          npm run check-translation-completeness

  # Run frontend unit tests
  fe-test:
    needs: lint-frontend
    name: FE Unit Tests
    runs-on: blacksmith-4vcpu-ubuntu-2204
    strategy:
      matrix:
        node-version: [20, 22]
      fail-fast: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Node.js
        uses: useblacksmith/setup-node@v5
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json
      - name: Install dependencies
        working-directory: ./frontend
        run: npm install --frozen-lockfile
      - name: Run TypeScript compilation and translation checks
        working-directory: ./frontend
        run: npm run make-i18n && tsc && npm run check-translation-completeness
      - name: Run tests and collect coverage
        working-directory: ./frontend
        run: npm run test:coverage
